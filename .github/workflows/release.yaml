name: Releaser

on:
  push:
    tags:
    - '*'
  workflow_dispatch:
    inputs:
      tag:
        description: "Release Tag"
        required: true

env:
  PYTHON_VERSION: 3.9

jobs:
  code_analysis:
    name: Code Analysis
    runs-on: ubuntu-latest
    permissions:
      security-events: write

      actions: read
      contents: read

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Change Directory
        run: cd ${{ github.workspace }}
      - name: Initialize CodeQL
        uses: github/codeql-action/init@v1
        with:
          languages: python
      - name: Autobuild
        uses: github/codeql-action/autobuild@v1
      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v1

  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Change Directory
        run: cd ${{ github.workspace }}
      - name: Setup Environment
        run: make environment
      - name: Lint
        run: make lint
      - name: Run Tests
        run: make test

  docker_build:
    name: Docker Build
    runs-on: ubuntu-latest
    needs: [code_analysis, test]
    env:
      REGISTRY: ghcr.io
      IMAGE_NAME: ghcr.io/pradyumnakrishna/face-auth-api
    permissions:
      packages: write

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Set up Python ${{ env.PYTHON_VERSION }}
        uses: actions/setup-python@v1
        with:
          python-version: ${{ env.PYTHON_VERSION }}
      - name: Change Directory
        run: cd ${{ github.workspace }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Log in to the Container registry
        uses: docker/login-action@v1
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Get Image Tag
        run: |
          if [[ ${{ github.event_name }} == 'push' ]]; then
            echo "IMAGE_TAG=${{ env.IMAGE_NAME }}:${{ github.event.release.tag_name }},${{ env.IMAGE_NAME }}:latest" >> $GITHUB_ENV
          else
            echo "IMAGE_TAG=${{ env.IMAGE_NAME }}:${{ github.event.inputs.tag }},${{ env.IMAGE_NAME }}:latest" >> $GITHUB_ENV
          fi
          exit 0
        shell: bash
      - name: Build and push
        uses: docker/build-push-action@v2
        with:
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ env.IMAGE_TAG }}

  create_release:
    name: Create Release
    runs-on: ubuntu-latest
    needs: [docker_build]
    env:
      IMAGE_NAME: ghcr.io/pradyumnakrishna/face-auth-api
    permissions:
      contents: write

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2
      - name: Get Image Tag
        run: |
          if [[ ${{ github.event_name }} == 'push' ]]; then
            echo "IMAGE_TAG=${{ env.IMAGE_NAME }}:${{ github.event.release.tag_name }},${{ env.IMAGE_NAME }}:latest" >> $GITHUB_ENV
            echo "TAG=${{ github.event.release.tag_name }}" >> $GITHUB_ENV
          else
            echo "IMAGE_TAG=${{ env.IMAGE_NAME }}:${{ github.event.inputs.tag }},${{ env.IMAGE_NAME }}:latest" >> $GITHUB_ENV
            echo "TAG=${{ github.event.inputs.tag }}" >> $GITHUB_ENV
          fi
          exit 0
        shell: bash
      - name: Release
        uses: softprops/action-gh-release@v1
        with:
          body: |
            New release, pull with docker using command given below:
            ```bash
            docker pull ${{ env.IMAGE_TAG }}
            ```
          draft: true
          tag_name: ${{ env.TAG }}
          generate_release_notes: true
